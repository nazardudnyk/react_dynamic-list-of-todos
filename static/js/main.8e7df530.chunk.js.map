{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","currentTodo","setIsOpenTodo","setUserId","setTodo","className","map","todo","id","title","userId","completed","classNames","type","onClick","TodoFilter","selectValue","onSelect","searchValue","onSearch","onSubmit","event","preventDefault","value","onChange","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","TodoModal","user","useState","isLoading","setIsLoading","useEffect","setTimeout","href","email","name","get","url","delay","fullURL","Promise","resolve","then","fetch","res","json","App","todosList","setTodosList","filterSelect","setFilterSelect","setSearchValue","isOpenTodo","Object","setUser","getUser","u","filteredTodos","items","filter","query","copy","el","toLowerCase","smallQuery","trim","includes","item","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e7df530.chunk.js","sourcesContent":["export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  currentTodo: Todo | null;\n  setIsOpenTodo: (b: boolean) => void;\n  setUserId: (n: number) => void;\n  setTodo: (t: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  currentTodo,\n  setIsOpenTodo = () => { },\n  setUserId = () => { },\n  setTodo = () => { },\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            userId,\n            completed,\n          } = todo;\n\n          const handleViewTodo = () => {\n            setIsOpenTodo(true);\n            setUserId(userId);\n            setTodo(todo);\n          };\n\n          return (\n            <tr data-cy=\"todo\" className=\"\" key={id}>\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-danger': !completed,\n                    'has-text-success': completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={handleViewTodo}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('far',\n                      {\n                        'fa-eye': currentTodo?.id !== id,\n                        'fa-eye-slash': currentTodo?.id === id,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Filter } from '../../types/Filter';\n\ntype Props = {\n  selectValue: string;\n  onSelect: (str: string) => void;\n  searchValue: string;\n  onSearch: (v: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectValue,\n  onSelect = () => { },\n  searchValue,\n  onSearch = () => { },\n}) => {\n  const handleSelectFilter = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    onSelect(event.target.value);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectValue}\n            onChange={handleSelectFilter}\n          >\n            <option value={Filter.ALL}>All</option>\n            <option value={Filter.ACTIVE}>Active</option>\n            <option value={Filter.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchValue}\n          onChange={event => onSearch(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {\n          searchValue && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => onSearch('')}\n              />\n            </span>\n          )\n        }\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  user: User;\n  todo: Todo | null;\n  setIsOpenTodo: (b: boolean) => void;\n  setTodo: (v: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  user,\n  todo,\n  setIsOpenTodo = () => { },\n  setTodo = () => { },\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 300);\n  }, []);\n\n  const handleCloseTodo = () => {\n    setIsOpenTodo(false);\n    setTodo(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todo?.completed\n                  ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  ) : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos, getUser } from './api';\nimport { Filter } from './types/Filter';\nimport { User } from './types/User';\n\nfunction getFilteredTodos(items: Todo[], filter: string, query: string) {\n  let copy = [...items];\n\n  if (query) {\n    copy = copy.filter(el => {\n      const title = el.title.toLowerCase();\n      const smallQuery = query.toLowerCase().trim();\n\n      return title.includes(smallQuery);\n    });\n  }\n\n  copy = copy.filter(item => {\n    switch (filter) {\n      case Filter.ALL:\n        return item;\n\n      case Filter.ACTIVE:\n        return !item.completed;\n\n      case Filter.COMPLETED:\n        return item.completed;\n\n      default:\n        return 0;\n    }\n  });\n\n  return copy;\n}\n\nexport const App: React.FC = () => {\n  const [todosList, setTodosList] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filterSelect, setFilterSelect] = useState('all');\n  const [searchValue, setSearchValue] = useState('');\n  const [isOpenTodo, setIsOpenTodo] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [user, setUser] = useState<User>(Object);\n  const [todo, setTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then(todos => setTodosList(todos));\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 300);\n  }, []);\n\n  useEffect(() => {\n    getUser(userId).then(u => setUser(u));\n  }, [userId]);\n\n  const filteredTodos = getFilteredTodos(todosList, filterSelect, searchValue);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectValue={filterSelect}\n                onSelect={setFilterSelect}\n                searchValue={searchValue}\n                onSearch={setSearchValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todos={filteredTodos}\n                    currentTodo={todo}\n                    setIsOpenTodo={setIsOpenTodo}\n                    setUserId={setUserId}\n                    setTodo={setTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isOpenTodo && (\n        <TodoModal\n          user={user}\n          todo={todo}\n          setIsOpenTodo={setIsOpenTodo}\n          setTodo={setTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}